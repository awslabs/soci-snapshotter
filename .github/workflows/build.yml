name: Build

on:
  push:
    branches: ['main', 'release/**']
    paths:
      - '**'
      - '!docs/**' # ignore docs changes
      - '!**.md' # ignore markdown changes
  pull_request:
    branches: ['main', 'release/**']
    paths:
      - '.github/workflows/build.yml'
      - '**.go'
      - 'go.*'
      - 'cmd/go.*'
      - 'Makefile'
      - 'Dockerfile'
      - 'integration/**'
      - 'scripts/**'
      - '!benchmark/**'

env:
  GO_VERSION: '1.24.4'

jobs:
  setup:
    uses: ./.github/workflows/setup.yml

  test:
    needs: setup
    runs-on: ${{ fromJSON(needs.setup.outputs.runner-labels)[matrix.os] }}
    strategy:
      matrix:
        os: ${{ fromJSON(needs.setup.outputs.available-runners) }}
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install zlib static on AL2 ARM instances
        if: matrix.os == 'al2-arm'
        run: dnf install zlib-static.aarch64 -y
      - run: make
      - run: make test-with-coverage
      - name: Show test coverage
        run: make show-test-coverage

  integration:
    needs: setup
    runs-on: ${{ fromJSON(needs.setup.outputs.runner-labels)[matrix.os] }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJSON(needs.setup.outputs.available-runners) }}
        containerd: ["1.6.38", "1.7.27", "2.0.5", "2.1.3"]
    env:
      DOCKER_BUILD_ARGS: "CONTAINERD_VERSION=${{ matrix.containerd }}"
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install zlib static on AL2 ARM instances
        if: matrix.os == 'al2-arm'
        run: dnf install zlib-static.aarch64 -y
      - name: Run integration tests
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-x86" ]]; then
            SKIP_SYSTEMD_TESTS=1
          fi
          SKIP_SYSTEMD_TESTS=$SKIP_SYSTEMD_TESTS make integration-with-coverage
      - name: Show test coverage
        run: make show-integration-coverage

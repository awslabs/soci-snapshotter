name: Visualize Benchmark

on:
  push:
    branches: [ main ]
    paths:
      - '**'
      - '!docs/**' # ignore docs changes
      - '!**.md' # ignore markdown changes

permissions:
  contents: write
  deployments: write
      
jobs:
  benchmark:
    runs-on: ubuntu-20.04
    steps:
      - name: Run Benchmarks on PR Merge
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - uses: actions/setup-go@v4
        with:
          go-version: '1.18.10'
      - run: make
      - name: Run benchmark
        run: echo "Benchmarking..."
      - run: make benchmarks-perf-test 
      - name: Update latest benchmark result
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-result-artifact
          path: ${{github.workspace}}/benchmark/performanceTest/output/results.json
      
  download-and-push-benchmark-result-gh-pages:
    runs-on: ubuntu-20.04
    needs: benchmark
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
      - name: Download latest benchmark result
        uses: actions/download-artifact@v3
        with:
          name: benchmark-result-artifact
          path: ${{github.workspace}}
      - name: Display structure of downloaded files
        run: ls -R
      - name: Make new Directory
        run: mkdir ${{github.workspace}}/current
      - name: Change permission of visualization_data_converter.sh
        run: chmod +x ${{github.workspace}}/scripts/visualization_data_converter.sh
      - name: Convert benchmark result to visualization data
        run: ${{github.workspace}}/scripts/visualization_data_converter.sh ${{github.workspace}}/results.json ${{github.workspace}}/current  
      - name: Set matrix
        id: set-matrix
         # Create a JSON array with the file paths and store it in the 'files' output
        run: echo "::set-output name=files::$(find ${{github.workspace}}/current -type f -name '*.json' -printf '%p\n' | jq -R . | jq -cs .)"
      - name: Upload files to matrix
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-gh-pages-artifact
          path: ${{github.workspace}}/current
    outputs:
      matrix: ${{ steps.set-matrix.outputs.files }}

  push-benchmark-result-gh-pages:
    name: Push benchmark result to Github-pages
    runs-on: ubuntu-20.04
    needs: download-and-push-benchmark-result-gh-pages
    strategy:
      matrix:
        file: ${{ fromJson(needs.download-and-push-benchmark-result-gh-pages.outputs.matrix) }}
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install # Replace this with the necessary command to install your dependencies.

      - name: Create current folder
        run: mkdir ${{github.workspace}}/current

      - name: Download latest benchmark result
        uses: actions/download-artifact@v3
        with:
          name: benchmark-gh-pages-artifact
          path: ${{github.workspace}}/current

      - name: Run benchmark action
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Soci Benchmark
          tool: 'customSmallerIsBetter'
          benchmark-data-dir-path: "dev/benchmarks/perfTest/${{ matrix.file }}"
          output-file-path: ${{github.workspace}}/current/${{ matrix.file }}.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          # Show alert with commit comment on detecting possible performance regression